@startuml Mobilna aplikacija Lovec Vue.js

title Mobilna aplikacija Lovec Vue.js

skinparam class {
  backgroundColor white
  borderColor #5FB8EC
  arrowColor black
}
skinparam class<<entity>> {
  backgroundColor #e8f5fc
  borderColor Blue
}
skinparam class<<control>> {
  backgroundColor #fce8e8
  borderColor Red
}
skinparam class<<boundary>> {
  backgroundColor #f2fce8
  borderColor Green
}
skinparam class<<External API>>{
  backgroundColor #f8f0d4
  borderColor Orange
}
skinparam class<<Vue view>>{
  backgroundColor #f8f0d4
  borderColor Orange
}

' skinparam shadowing false
skinparam style strictuml
skinparam defaultTextAlignment center
' skinparam packageStyle rectangle
skinparam groupInheritance 5
hide circle
' hide members

'---------Razredi---------------------------
class TabsPage<<boundary>>
class ToolbarNavigation<<boundary>>

class Router<<control>>{
}

TabsPage --> Router
ToolbarNavigation --> Router

package Views{
  Class SubTabPripravniki<<Vue view>>{
  }

  Class TabRevirji<<Vue view>>{
  }

  Class TabOpazovalnica<<Vue view>>{
  }

  Class SubTabVplen<<Vue view>>{
  }

  Class TabOprema<<Vue view>>{
  }

  Class TabIzkaznica<<Vue view>>{
  }

  Class TabJage<<Vue view>>{
  }

  Class TabIzkaznica<<Vue view>>{
  }

  Class LoginPage<<Vue view>>{
  }
}

Router --> SubTabPripravniki
Router --> TabRevirji
Router --> TabOpazovalnica
Router --> SubTabVplen
Router --> TabOprema
Router --> TabIzkaznica
Router --> TabJage
Router --> TabIzkaznica
Router --> LoginPage

Class FabButton<<Vue component>>{
}
Class CardJaga<<Vue component>>{
}
Class ModalJagaAdd<<Vue component>>{
}
Class ModalJagaDescription<<Vue component>>{
}

TabJage --> FabButton
TabJage --> CardJaga
TabJage --> ModalJagaAdd
TabJage --> ModalJagaDescription

Class GridIzkaznica<<Vue component>>{
}

TabIzkaznica --> GridIzkaznica

Class FabButtonAdd<<Vue component>>{
}
Class ModalOpremaAdd<<Vue component>>{
}
Class CardOpremaDescription<<Vue component>>{
}

TabOprema --> FabButtonAdd
TabOprema --> ModalOpremaAdd
TabOprema --> CardOpremaDescription

' Class FabButtonAdd<<Vue component>>{
' }
Class CardVplen<<Vue component>>{
}
Class ModalVplenAdd<<Vue component>>{
}
Class ModalVplenDescription<<Vue component>>{
}

SubTabVplen --> FabButtonAdd
SubTabVplen --> CardVplen
SubTabVplen --> ModalVplenAdd
SubTabVplen --> ModalVplenDescription

Class MapComponent<<Vue component>>{
}

TabOpazovalnica --> MapComponent

TabRevirji --> MapComponent

' Class FabButtonAdd<<Vue component>>{
' }
Class ModalDnevnikAdd<<Vue component>>{
}
Class CardDnevnikDescription<<Vue component>>{
}

SubTabPripravniki --> FabButtonAdd
SubTabPripravniki --> ModalDnevnikAdd
SubTabPripravniki --> CardDnevnikDescription

package Factory{
  Class Uporabnik<<entity>> {


  Class Oprema<<entity>> {
    id: string
    lastnik: string
    naziv: string
    tip: string
    stanje: string
    datum: string
  }

package Stores {
  Class useLoginStore<<Store>> {
    + uporabnik: Uporabnik
    + isLogged: boolean

    + login(): boolean
    + logout(): boolean
    + getToken(): string
    + getRefreshToken(): string
    + updateToken(): void
    + updateRefreshToken(): void
  }

  Class useOpremaStore<<Store>> {
    + oprema: Oprema[]
    
    + getOprema(): Oprema[]
    + deleteOprema(): boolean
    + postOprema(): Oprema | null
    + adminGetOprema(): Oprema[]
    + adminDeleteOprema(): boolean
  }

  useOpremaStore *.. Oprema: uses
  useOpremaStore *.. useRequest: uses
}

  Class "useRequest<T>"<<Composable>> {
    - baseUrl: string

    - requestLong(): CapacitorHTTP
    - createAuthenticatedRequest(): CapacitorHTTP
    - refreshTokenCall(): JWTTokenPair
    + request(): T
  }

  useRequest *.. useLoginStore: uses
  useRequest *.. JWTTokenPair: uses

  Class "usePagination<T>"<<Composable>> {
    + usePagination<T>(fetchFunctionTemplate: (page?: number) => T[], isSinglePage: boolean)
    + items: T[]

    - page: number
    - isMore: boolean

    + fetchMore(): void 
    + refresh(): void
  }
}

@enduml